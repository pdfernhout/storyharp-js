
// Exported from: ../../storyharp-js/converted_source/uspreferences.lfm

import { m } from "mithril"
import { caption } from "common"

export function viewPreferencesForm() {
    return m("PreferencesForm.TPreferencesForm",
        {
        // Top: "399",
        // Left: "174",
        // Height: "0",
        // Width: "0",
        // BorderStyle: "bsDialog",
        // Caption: "Editor Preferences",
        // ClientHeight: "323",
        // ClientWidth: "363",
        // Font.Charset: "DEFAULT_CHARSET",
        // Font.Color: "clWindowText",
        // Font.Height: "-11",
        // Font.Name: "Arial",
        // Font.Style: "[]",
        // Position: "poScreenCenter",
        // OnActivate: "FormActivate",
        // PixelsPerInch: "96",
        // TextHeight: "13",
        },
        m("Group.Group.g00000004",
            m("div.Panel1.TPanel",
                {
                    // Top: "4",
                    // Left: "4",
                    // Height: "313",
                    // Width: "289",
                    // BevelInner: "bvRaised",
                    // BevelOuter: "bvLowered",
                    // TabOrder: "2",
                },
                m("div.Label4.TLabel",
                    {
                        // Top: "8",
                        // Left: "12",
                        // Height: "13",
                        // Width: "48",
                        // FocusControl: "changeTableFont",
                    },
                    caption("&Table font"),
                ),
                m("Group.Group.g00000024",
                    m("input.tableFontNameEdit.TEdit",
                        {
                            // Top: "24",
                            // Left: "32",
                            // Height: "21",
                            // Width: "169",
                            // Color: "clBtnFace",
                            // ReadOnly: "True",
                            // TabOrder: "0",
                        },
                    ),
                    m("button.changeTableFont.TButton",
                        {
                            onclick: changeTableFontClick,
                            // Top: "24",
                            // Left: "208",
                            // Height: "21",
                            // Width: "69",
                            // TabOrder: "1",
                        },
                        "Change...",
                    ),
                ),
                m("div.Label1.TLabel",
                    {
                        // Top: "52",
                        // Left: "12",
                        // Height: "13",
                        // Width: "42",
                        // FocusControl: "changeMapFont",
                    },
                    caption("&Map font"),
                ),
                m("Group.Group.g00000068",
                    m("input.mapFontNameEdit.TEdit",
                        {
                            // Top: "68",
                            // Left: "32",
                            // Height: "21",
                            // Width: "169",
                            // Color: "clBtnFace",
                            // ReadOnly: "True",
                            // TabOrder: "7",
                        },
                    ),
                    m("button.changeMapFont.TButton",
                        {
                            onclick: changeMapFontClick,
                            // Top: "68",
                            // Left: "208",
                            // Height: "21",
                            // Width: "69",
                            // TabOrder: "8",
                        },
                        "Change...",
                    ),
                ),
                m("div.Label5.TLabel",
                    {
                        // Top: "96",
                        // Left: "12",
                        // Height: "13",
                        // Width: "59",
                        // FocusControl: "changeBrowserFont",
                    },
                    caption("&Browser font"),
                ),
                m("Group.Group.g00000112",
                    m("input.browserFontNameEdit.TEdit",
                        {
                            // Top: "112",
                            // Left: "32",
                            // Height: "21",
                            // Width: "169",
                            // Color: "clBtnFace",
                            // ReadOnly: "True",
                            // TabOrder: "9",
                        },
                    ),
                    m("button.changeBrowserFont.TButton",
                        {
                            onclick: changeBrowserFontClick,
                            // Top: "112",
                            // Left: "208",
                            // Height: "21",
                            // Width: "69",
                            // TabOrder: "10",
                        },
                        "Change...",
                    ),
                ),
                m("div.Label2.TLabel",
                    {
                        // Top: "141",
                        // Left: "12",
                        // Height: "13",
                        // Width: "169",
                        // FocusControl: "changeBackgroundColor",
                    },
                    caption("Background &color for selected items"),
                ),
                m("div.backgroundColorPanel.TPanel",
                    {
                        // Top: "157",
                        // Left: "32",
                        // Height: "21",
                        // Width: "53",
                        // BevelInner: "bvLowered",
                        // BevelOuter: "bvLowered",
                        // Color: "clYellow",
                        // TabOrder: "2",
                    },
                ),
                m("button.changeBackgroundColor.TButton",
                    {
                        onclick: changeBackgroundColorClick,
                        // Top: "158",
                        // Left: "92",
                        // Height: "21",
                        // Width: "69",
                        // TabOrder: "5",
                    },
                    "Change...",
                ),
                m("div.Label3.TLabel",
                    {
                        // Top: "185",
                        // Left: "12",
                        // Height: "13",
                        // Width: "132",
                        // FocusControl: "changeTextColor",
                    },
                    caption("Te&xt color for selected items"),
                ),
                m("div.textColorPanel.TPanel",
                    {
                        // Top: "201",
                        // Left: "32",
                        // Height: "21",
                        // Width: "53",
                        // BevelInner: "bvLowered",
                        // BevelOuter: "bvLowered",
                        // Color: "clBlack",
                        // TabOrder: "3",
                    },
                ),
                m("button.changeTextColor.TButton",
                    {
                        onclick: changeTextColorClick,
                        // Top: "202",
                        // Left: "92",
                        // Height: "21",
                        // Width: "69",
                        // TabOrder: "6",
                    },
                    "Change...",
                ),
                m("div.Label6.TLabel",
                    {
                        // Top: "229",
                        // Left: "12",
                        // Height: "13",
                        // Width: "150",
                        // FocusControl: "ChangeMapCommandsColor",
                    },
                    caption("Text color for c&ommands in map"),
                ),
                m("div.mapCommandsColorPanel.TPanel",
                    {
                        // Top: "245",
                        // Left: "32",
                        // Height: "21",
                        // Width: "53",
                        // BevelInner: "bvLowered",
                        // BevelOuter: "bvLowered",
                        // Color: "clBlue",
                        // TabOrder: "11",
                    },
                ),
                m("button.ChangeMapCommandsColor.TButton",
                    {
                        onclick: ChangeMapCommandsColorClick,
                        // Top: "246",
                        // Left: "92",
                        // Height: "21",
                        // Width: "69",
                        // TabOrder: "12",
                    },
                    "Change...",
                ),
                m("label.checkbox-inline.showMapCommands.TCheckBox", m("input[type=checkbox]",
                    {
                        onclick: showMapCommandsClick,
                        // Top: "272",
                        // Left: "12",
                        // Height: "17",
                        // Width: "201",
                        // TabOrder: "4",
                    },),
                    caption("Show map &commands with prefix \">\""),
                ),
                m("label.checkbox-inline.symbolButtons.TCheckBox", m("input[type=checkbox]",
                    {
                        onclick: symbolButtonsClick,
                        // Top: "292",
                        // Left: "12",
                        // Height: "17",
                        // Width: "233",
                        // TabOrder: "13",
                    },),
                    caption("Use &symbols instead of pictures on buttons"),
                ),
            ),
            m("button.Close.TButton",
                {
                    // Top: "4",
                    // Left: "299",
                    // Height: "21",
                    // Width: "60",
                    // Default: "True",
                    // ModalResult: "1",
                    // TabOrder: "0",
                },
                "OK",
            ),
        ),
        m("button.cancel.TButton",
            {
                // Top: "27",
                // Left: "299",
                // Height: "21",
                // Width: "60",
                // Cancel: "True",
                // ModalResult: "2",
                // TabOrder: "1",
            },
            "Cancel",
        ),
        m("button.helpButton.TSpeedButton",
            {
                onclick: helpButtonClick,
                // Top: "63",
                // Left: "299",
                // Height: "21",
                // Width: "60",
            },
            caption("&Help"),
        ),
        m("TColorDialog.ColorDialog.TColorDialog",
            {
                // Top: "104",
                // Left: "308",
                // Height: "0",
                // Width: "0",
            },
        ),
        m("TFontDialog.FontDialog.TFontDialog",
            {
                // Top: "136",
                // Left: "308",
                // Height: "0",
                // Width: "0",
                // Font.Charset: "DEFAULT_CHARSET",
                // Font.Color: "clWindowText",
                // Font.Height: "-11",
                // Font.Name: "Arial",
                // Font.Style: "[]",
                // MinFontSize: "0",
                // MaxFontSize: "0",
                // Options: "[fdForceFontExist]",
            },
        ),
    )
}

function ChangeMapCommandsColorClick() { console.log("ChangeMapCommandsColorClick") }

function changeBackgroundColorClick() { console.log("changeBackgroundColorClick") }

function changeBrowserFontClick() { console.log("changeBrowserFontClick") }

function changeMapFontClick() { console.log("changeMapFontClick") }

function changeTableFontClick() { console.log("changeTableFontClick") }

function changeTextColorClick() { console.log("changeTextColorClick") }

function helpButtonClick() { console.log("helpButtonClick") }

function showMapCommandsClick() { console.log("showMapCommandsClick") }

function symbolButtonsClick() { console.log("symbolButtonsClick") }
